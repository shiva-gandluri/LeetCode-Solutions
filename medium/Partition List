# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:
        """
        [1,4,3,2,5,2], x = 3
                     ^
    
         0 -> 1 -> 2 -> 2
         s1             l
        
        
         0 -> 4 -> 3 -> 5 -> Null
         s2             h
        """
        
        start1 = lowValPtr = ListNode(0)
        start2 = highValPtr = ListNode(0)
        
        while head:
            if head.val < x:
                lowValPtr.next = head
                lowValPtr = lowValPtr.next
            else:
                highValPtr.next = head
                highValPtr = highValPtr.next
            head = head.next
            
        highValPtr.next = None
        lowValPtr.next = start2.next
        
        return start1.next
